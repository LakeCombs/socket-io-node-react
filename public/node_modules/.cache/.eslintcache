[{"/home/lakecombs/Desktop/workspace/playground/snappy/public/src/index.js":"1","/home/lakecombs/Desktop/workspace/playground/snappy/public/src/App.js":"2","/home/lakecombs/Desktop/workspace/playground/snappy/public/src/pages/Register.jsx":"3","/home/lakecombs/Desktop/workspace/playground/snappy/public/src/pages/Login.jsx":"4","/home/lakecombs/Desktop/workspace/playground/snappy/public/src/utils/api_routes.js":"5"},{"size":251,"mtime":1658699701930,"results":"6","hashOfConfig":"7"},{"size":394,"mtime":1658699927780,"results":"8","hashOfConfig":"7"},{"size":5453,"mtime":1658756801907,"results":"9","hashOfConfig":"7"},{"size":4342,"mtime":1658705349489,"results":"10","hashOfConfig":"7"},{"size":365,"mtime":1658756964164,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"e8ycg5",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lakecombs/Desktop/workspace/playground/snappy/public/src/index.js",[],[],[],"/home/lakecombs/Desktop/workspace/playground/snappy/public/src/App.js",[],[],"/home/lakecombs/Desktop/workspace/playground/snappy/public/src/pages/Register.jsx",["29"],[],"/home/lakecombs/Desktop/workspace/playground/snappy/public/src/pages/Login.jsx",["30"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Logo from \"../assets/logo.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport api from \"../utils/api_routes\";\n\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({ username: \"\", password: \"\" });\n    const toastOptions = {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\",\n    };\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n            navigate(\"/\");\n        }\n    }, []);\n\n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };\n\n    const validateForm = () => {\n        const { username, password } = values;\n        if (username === \"\") {\n            toast.error(\"Email and Password is required.\", toastOptions);\n            return false;\n        } else if (password === \"\") {\n            toast.error(\"Email and Password is required.\", toastOptions);\n            return false;\n        }\n        return true;\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            const { username, password } = values;\n            const { data } = await axios.post(api.loginRoute, {\n                username,\n                password,\n            });\n            if (data.status === false) {\n                toast.error(data.msg, toastOptions);\n            }\n            if (data.status === true) {\n                localStorage.setItem(\n                    process.env.REACT_APP_LOCALHOST_KEY,\n                    JSON.stringify(data.user)\n                );\n\n                navigate(\"/\");\n            }\n        }\n    };\n\n    return (\n        <>\n            <FormContainer>\n                <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\n                    <div className=\"brand\">\n                        <img src={Logo} alt=\"logo\" />\n                        <h1>snappy</h1>\n                    </div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        name=\"username\"\n                        onChange={(e) => handleChange(e)}\n                        min=\"3\"\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        onChange={(e) => handleChange(e)}\n                    />\n                    <button type=\"submit\">Log In</button>\n                    <span>\n                        Don't have an account ? <Link to=\"/register\">Create One.</Link>\n                    </span>\n                </form>\n            </FormContainer>\n            <ToastContainer />\n        </>\n    );\n}\n\nconst FormContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 5rem;\n    }\n    h1 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    background-color: #00000076;\n    border-radius: 2rem;\n    padding: 5rem;\n  }\n  input {\n    background-color: transparent;\n    padding: 1rem;\n    border: 0.1rem solid #4e0eff;\n    border-radius: 0.4rem;\n    color: white;\n    width: 100%;\n    font-size: 1rem;\n    &:focus {\n      border: 0.1rem solid #997af0;\n      outline: none;\n    }\n  }\n  button {\n    background-color: #4e0eff;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    &:hover {\n      background-color: #4e0eff;\n    }\n  }\n  span {\n    color: white;\n    text-transform: uppercase;\n    a {\n      color: #4e0eff;\n      text-decoration: none;\n      font-weight: bold;\n    }\n  }\n`;","/home/lakecombs/Desktop/workspace/playground/snappy/public/src/utils/api_routes.js",["31","32","33","34","35","36","37"],[],{"ruleId":"38","severity":1,"message":"39","line":30,"column":8,"nodeType":"40","endLine":30,"endColumn":10,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"39","line":25,"column":8,"nodeType":"40","endLine":25,"endColumn":10,"suggestions":"42"},{"ruleId":"43","severity":2,"message":"44","line":4,"column":12,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"43","severity":2,"message":"44","line":5,"column":15,"nodeType":"45","messageId":"46","endLine":5,"endColumn":19},{"ruleId":"43","severity":2,"message":"44","line":6,"column":13,"nodeType":"45","messageId":"46","endLine":6,"endColumn":17},{"ruleId":"43","severity":2,"message":"44","line":7,"column":15,"nodeType":"45","messageId":"46","endLine":7,"endColumn":19},{"ruleId":"43","severity":2,"message":"44","line":8,"column":18,"nodeType":"45","messageId":"46","endLine":8,"endColumn":22},{"ruleId":"43","severity":2,"message":"44","line":9,"column":21,"nodeType":"45","messageId":"46","endLine":9,"endColumn":25},{"ruleId":"43","severity":2,"message":"44","line":10,"column":16,"nodeType":"45","messageId":"46","endLine":10,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["47"],["48"],"no-undef","'host' is not defined.","Identifier","undef",{"desc":"49","fix":"50"},{"desc":"49","fix":"51"},"Update the dependencies array to be: [navigate]",{"range":"52","text":"53"},{"range":"54","text":"53"},[881,883],"[navigate]",[809,811]]